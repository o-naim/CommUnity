name: CommUnity CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: community_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup test database
      run: |
        npx prisma migrate deploy
        npx prisma db seed
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/community_test
    
    - name: Run TypeScript type checking
      run: npm run type-check
    
    - name: Run unit tests with Jest
      run: npm run test:unit
    
    - name: Run integration tests with jqwik
      run: npm run test:property
    
    - name: Run E2E tests with Cypress
      run: npm run test:e2e:headless
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/community_test
    
    - name: Run performance tests with Gatling
      run: npm run test:performance
    
    - name: Run security tests with Burp Suite
      run: npm run test:security
    
    - name: Database analysis with DBVisualizer
      run: npm run db:analyze

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Build Docker image
      run: docker build -t community:${{ github.sha }} .
    
    - name: Push to registry
      if: github.ref == 'refs/heads/main'
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push community:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: |
        # Deploy to your production environment
        echo "Deploying CommUnity to production..."
        
    - name: Run database migrations
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
    
    - name: Notify monitoring
      run: |
        curl -X POST ${{ secrets.GRAFANA_WEBHOOK_URL }} \
          -H "Content-Type: application/json" \
          -d '{"text":"CommUnity deployed successfully"}'
